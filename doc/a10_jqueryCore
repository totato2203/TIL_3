
		1. jquery의 DOM
			document.querySelector("선택자")
			document.querySelectorAll("선택자")
			==> $("선택자")
			$("[속성=속성값]"), $("#아이디명"), $(".클래스"), $("태그명")
			.value = "입력값".value
			==> $("선택자").val("입력값"), $().val()
			.innerText
			==> $("선택자").text("표현할문자열"), $("선택자").text()
			.innerHTML
			==> $("선택자").html("표현할html코드"), $("선택자").html()
			.속성 = "속성값" ex) domObj.align="center"
    		==> $("선택자").attr("속성", "속성값")
    		.style.속성 = "속성값" ex) domObj.style.backgroundColor="red"
    		==> $("선택자").css("속성", "속성값")
    			ex) $("h1").css("background-color", "blue");
    			ex) $("h1").css({"color" : "blue", "border" : "1px solid red"});
    		var h1Arry = document.querySelectorAll("h1")
    		for(var idx = 0; idx < h1Arry.length; idx++){
    			h1Arry[idx].style.backgroundColor="blue"
    		}
    		==> $("h1").css("background-color", "blue");
    		
    		ps) jquery에서 javascript DOM 형식을 사용하려면
    		var dom01 = $("선택자")
    		dom01.align="center"
    		dom01.location.href="";
2. 초기화면 구성
	1) url을 통해서 화면 출력(jsp 화면 호출)
		ex)
		http://localhost:7080/springweb/deptList10.do
		@RequestMapping("deptList10.do")
	2) ajax로 데이터 처리 controller 구현
		- url 형태
			http://localhost:7080/springweb/deptAjax.do
			@RequestMapping("deptAjax.do")
			public String deptAjax(Model d){
				d.addAttribute("dlist", service.getDeptList(new Dept("", "")));
				return "pageJsonReport"; // container에서 지정한 json 데이터
			}
		- 위 url을 통해서 java의 객체 ==> json 형태의 문자열 객체로 출력
			{"dlist":[{"deptno":10, "dname":"ACCOUNTING", "loc":"NEW YORK"},
			{"deptno":]}
			
	3) jsp(화면)
		- 이벤트 지정
		- 이벤트 핸들러 메소드 안에서 ajax 처리
		$("#btn01").click(function(){
			$.ajax({
				url:"${path}/deptAjax.do",
				dataType:"json",
				success:function(data){
					var list = data.dlist
					var addHTML = "";
					$(list).each(function(idx, dept){
						addHTML += "<tr><td>" + dept.deptno + "</td><td> " + dept.dname
							+ "</td><td>" + dept.loc + "</td></tr>"
					})
					$("#deptList").html(addHTML)
				}
			})
		}