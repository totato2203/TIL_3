<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="springweb.a02_mvc.a03_dao.DaoExp01">
	<select id="getEmpCount" resultType="int">
		select count(*)
		from emp
	</select>
	<!--
	resultType의 가능한 변수 유형 :
		int, double, string
		boolean(0(true), 1(false))
	-->
	<select id="getEmpSal" resultType="double">
		SELECT sal
		FROM emp
		WHERE empno = 7369
	</select>
	
	<select id="getSalSum" resultType="double">
		SELECT sum(sal)
		FROM emp
		WHERE deptno = 10
	</select>
	
	<!-- 
	<select id="getEmpJob" resultType="string">
		SELECT job
		FROM emp
		WHERE empno = 7499
	</select>
	-->
	
	<!--
	public boolean hasEmp();
	-->
	<select id="hasEmp" resultType="boolean">
		SELECT count(*)
		FROM emp
		WHERE empno = 8888
	</select>
	
	<!-- 
	public deptemp01 getDeptEmp();
	deptemp01과 mapping 되어 있는 VO 클래스에
	class DeptEmp01{
		public void setDname(String dname);
		public void setEname(String ename);
		public void setSal(double sal);
		public void setLoc(double loc);
	}
	-->
	<select id="getDeptEmp" resultType="deptemp01">
		select dname, ename, sal, loc
		from emp e, dept d
		where e.deptno = d.deptno
		and empno = 7369
	</select>
	
	<select id="getSalgrade" resultType="salgrade">
		SELECT *
		FROM SALGRADE
		WHERE grade = 4
	</select>
	<!--
		public List<String> getEnames();
		public List<Integer> getEmpnos();
		public Double[] getSalaries();
	-->
	<select id="getEnames" resultType="string">
		SELECT ename
		FROM emp
	</select>
	<select id="getEmpnos" resultType="int">
		SELECT empno
		FROM emp
		WHERE deptno = 10
	</select>
	<select id="getSalaries" resultType="double">
		SELECT sal
		FROM emp
		WHERE job = 'SALESMAN'
	</select>
	
	<select id="getJobs" resultType="string">
		SELECT *
		FROM SALGRADE
		WHERE grade = 4
	</select>
	
	
	<select id="getEmpList30" resultType="emp">
		select *
		from emp
		where deptno = 30
	</select>
	
	<select id="getEmpList" resultType="empq">
		SELECT empno, ename, to_char(hiredate, 'Q') div, hiredate
		FROM emp
		WHERE to_char(hiredate, 'Q') = 1
	</select>
	
	<select id="getJobAvg" resultType="jobavg">
		SELECT job, round(avg(sal)) avgsal
		FROM emp
		GROUP BY job
	</select>
	
	<delete id="deleteEmp" parameterType="string">
		delete
		from emp01
		where job = #{job}
	</delete>
	
	<select id="getEmpJob" resultType="emp" parameterType="string">
		select *
		from emp01
		where job = #{job}
	</select>
	<delete id="deleteQua" parameterType="string">
		delete
		from emp01
		where to_char(hiredate, 'Q') = #{div}
	</delete>
	<select id="getDeptMaxSal" resultType="deptMsal" parameterType="int">
		select deptno, max(sal) msal
		from emp01
		where deptno = #{deptno}
		group by deptno
	</select>
	
	<select id="schEmpList02" resultType="emp" parameterType="emp">
		select *
		from emp01
		where ename = #{ename}
		and job = #{job}
		and sal = #{sal}
	</select>
	
	<insert id="insertEmp02" parameterType="emp">
		insert into emp01(empno, ename, job)
			values(#{empno}, #{ename}, #{job})
	</insert>
	
	<update id="updateEmp02" parameterType="emp">
		update emp01
			set ename = #{ename},
				mgr = #{mgr},
				sal = #{sal}
		where empno = #{empno}
	</update>
	
	<insert id="insertDept" parameterType="dept">
		insert into dept01
			values(#{deptno}, #{dname}, #{loc})
	</insert>
	
	<select id="getEmpList2" resultType="emp" parameterType="map">
		select *
		from emp
		where 1=1
		<if test="ename != null">
			and ename like '%' || #{ename} || '%'
		</if>
		<if test="job != null">
			and job like '%' || #{job} || '%'
		</if>
	</select>
	
	<select id="getDeptList2" resultType="dept" parameterType="hashMap">
		select *
		from dept
		where 1=1
		<if test="dname != null">
			and dname like '%' || #{dname} || '%'
		</if>
		<if test="loc != null">
			and loc like '%' || #{loc} || '%'
		</if>
	</select>
	
	<select id="getAvgSal" resultType="jobavg" parameterType="string">
		SELECT job, round(avg(sal)) avgsal
		FROM emp01
		WHERE job = #{job}
		GROUP BY job
	</select>
	<select id="getAvgSalJob" resultType="jobavg" parameterType="string">
		SELECT job, round(avg(sal)) avgsal
		FROM emp
		WHERE job = #{job}
		GROUP BY job
	</select>
	<select id="schSalList" resultType="salgrade" parameterType="int">
		select *
		from emp01
		where sal between #{losal} and #{hisal}
	</select>
	<insert id="insertSalgrade" parameterType="salgrade">
		insert into salgrade01 values(#{grade}, #{losal}, #{hisal})
	</insert>
	
	<select id="getDetail" resultType="emp" parameterType="int">
		select *
		from emp
		where empno = #{empno}
	</select>
	<update id="updateEmp03" parameterType="emp">
		UPDATE emp
			SET ename = #{ename},
				job = #{job},
				hiredate = #{hiredate},
				sal = #{sal},
				comm = #{comm},
				deptno = #{deptno}
			where empno = #{empno}
	</update>
	<delete id="deleteEmp02" parameterType="int">
		DELETE FROM emp
		where empno = #{empno}
	</delete>
	
	
</mapper>
