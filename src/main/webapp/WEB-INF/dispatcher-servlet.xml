<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:task="http://www.springframework.org/schema/task" 
   xmlns:aop="http://www.springframework.org/schema/aop" 
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xmlns:p="http://www.springframework.org/schema/p"
   xmlns:c="http://www.springframework.org/schema/c"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:util="http://www.springframework.org/schema/util"
   xmlns:websocket="http://www.springframework.org/schema/websocket"
   xmlns:sec="http://www.springframework.org/schema/security"
   xmlns:tx="http://www.springframework.org/schema/tx" 
    
   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd       
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd     
        http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
         http://www.springframework.org/schema/websocket
      http://www.springframework.org/schema/websocket/spring-websocket.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd   
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd   
      " >
    <!-- id, name : default 클래스명의 소문자로 설정이 된다. 
    	a01_StartController 
    # 초기 controller/service/repository 등록
    -->
    <context:component-scan base-package="springweb">
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>
    <!-- 컨테이너 및 공통 설정 정보 선언 파일 지정 -->
    <context:property-placeholder location="classpath:resource/configure"/>
    <!--
    # DB 연동 
    1. 연결객체 선언.
     -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
    	  destroy-method="close">
    	  <property name="driverClassName" value="${jdbc.driver}"/>
    	  <property name="url" value="${jdbc.url}"/>
    	  <property name="username" value="${jdbc.user}"/>
    	  <property name="password" value="${jdbc.pass}"/>
    </bean>
    <!-- 
    2. mybatis 프레임워크에서 연결객체 연동 및 공통 설정 파일지정.--> 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource"  ref="dataSource"/>
		<property name="configLocation" value="classpath:resource/mybatis.Spring.xml"/>
	</bean>
	<!-- 
	3. mybatis에서 자동으로 상속받는 실제 객체를 만들어 주는 dao 인터페이스가 있는 위치
		추가패키지 value="패키지1,패키지2,..."
	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="springweb.a02_mvc.a03_dao"/>
	
	</bean>
	
	<!-- 
	# default view는 jsp/html
	1. 추가하여 어떤 경우에는 json 데이터도 출력하고, 어떤 경우에는 파일을 다운로드 하려면
		view를 선택적으로 할 수 있는 container에서 선언해야 한다.
	-->
	<!-- 
	2. jsp 뷰 선언 : 우선순위 2번째
	-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="1"/>
	</bean>
	<!--
	3. 기타 뷰 (json, 파일다운로드, 엑셀 다운로드 등등)
	-->
	<bean id="btnViewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0"></property>
	</bean>
	<!--
	4. json뷰
	-->
	<bean id="pageJsonReport" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<property name="contentType" value="text/html;charset=utf-8"/>
	</bean>
	<!-- 
	5. 파일 업로드 뷰
	-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	<!-- 
	6. 파일다운로드 뷰
	-->
	<bean id="fileView01" class="springweb.z02_util.DownloadViewer"/>
	
	<!--
	7. 웹 소켓 통신
		handler(java) <==> client(js)
	-->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>
	<mvc:default-servlet-handler/>
	<!-- 특정 url 주소로 handler 객체를 호출
		/chat-ws.do를 호출해서 서버에 handler 객체를 호출
	-->
	<websocket:handlers>
		<websocket:mapping handler="chatHandler" path="/chat-ws.do"/>
		<websocket:handshake-interceptors>
			<bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
			<!-- 로그인한 유저의 아이디를 알려면 http 세션을 써야한다. 웹 소켓 세션에다가 http 세션을 올려줘야 접근이 가능하다. -->
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
</beans>